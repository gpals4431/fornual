<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="com.fornula.domain.expert.mapper.java.ExpertSalesMapper">
	<!-- 검색필터를 이용한 검색 -->
	<!-- <select id="selectSearchSalesList" resultType="ItemSales">
		SELECT SALES.sales_idx,
				SALES.sales_date,
				SALES.sales_status,
				ITEM.item_name,
				ITEM.item_idx,
				ITEM.price,
				ITEM.item_content
		FROM sales SALES
   		JOIN item ITEM 
   		ON SALES.item_idx = ITEM.item_idx
   		WHERE SALES.sales_status = #{salesStatus}
    	AND SALES.sales_date = #{salesDate}
        ORDER BY SALES.sales_date
	</select> -->
	
	
	<!-- 세션에 저장된 memberIdx를 통해 expertIdx를 가져오는 mapper -->
	<!-- <select id="selectExpertIdxByMemberIdx" parameterType="int" resultType="int">
		SELECT expert_idx
		FROM expert
		WHERE member_idx = #{memberIdx}	
	</select> -->
	<!-- 
	<resultMap type="SaleExpertItem" id="SaleExpertItem">
		<association property="item" javaType="Item">
			<id column="item_idx" property="itemIdx"/>
			<result column="item_name" property="itemName"/>
			<result column="price" property="price"/>
			<result column="item_content" property="itemContent"/>
		</association>
		<association property="sales" javaType="Sales">
			<id column="sales_idx" property="salesIdx"/>
			<result column="sales_date" property="salesDate"/>
			<result column="sales_status" property="salesStatus"/>
			<result column="item_idx" property="itemIdx"/>
		</association>
		<association property="photo" javaType="Photo">
			<id column="photo_idx" property="photoIdx"/>
			<result column="item_idx" property="itemIdx"/>
			<result column="itemfile_name" property="itemfileName"/>
		</association>
	</resultMap>
 -->

	<!-- 판매내역 출력-->
	<select id="selectSalesList" resultType="SaleItemExpert">
		 SELECT S.sales_idx,
                S.sales_date,
                S.sales_status,
                I.item_idx,
                I.item_name,
                I.price,
                I.item_content,
                P.itemfile_name
        FROM sales S
        JOIN item I ON S.item_idx = I.item_idx
        LEFT JOIN photo P ON I.item_idx = P.item_idx
        WHERE I.expert_idx = #{expertIdx}
        ORDER BY S.sales_date
	</select>
 
	<!-- 상태 버튼 클릭시 판매 상태 변경 --> 
	<!-- 
	<update id="updateSalesStatus" parameterType="SaleItemExpert">
		UPDATE sales S
        SET S.sales_status =
		<choose>
			<when test='S.sale_status gt 5 '>
				#{salesStatus}
			</when>   
			<otherwise>
			     
         (  SELECT P.purchase_status
            FROM purchase P
            JOIN item I ON P.item_idx = I.item_idx
            WHERE
                I.item_idx = S.item_idx
                AND P.purchase_status BETWEEN 5 AND 7
                AND ROWNUM = 1
        )
        WHERE EXISTS (
            SELECT 1
            FROM purchase P
            JOIN item I ON P.item_idx = I.item_idx
            WHERE
                I.item_idx = S.item_idx
                AND P.purchase_status BETWEEN 5 AND 7
        )
        </otherwise>
        </choose>
	</update>
 -->
	<!-- 구매확정된 총 판매금액 출력 -->
	<select id="selectPrice" resultType="Integer">
	 	SELECT SUM(ITEM.price) as total_price
		FROM item 
		JOIN sales 
		ON ITEM.item_idx = SALES.item_idx 
		WHERE SALES.sales_status =2 and ITEM.expert_idx=#{expertIdx}
	</select> 
 </mapper>





