<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="com.fornula.domain.expert.mapper.java.ExpertSalesMapper">
	<!-- 검색필터를 이용한 검색 -->
	<!-- <select id="selectSearchSalesList" resultType="ItemSales">
		SELECT SALES.sales_idx,
				SALES.sales_date,
				SALES.sales_status,
				ITEM.item_name,
				ITEM.item_idx,
				ITEM.price,
				ITEM.item_content
		FROM sales SALES
   		JOIN item ITEM 
   		ON SALES.item_idx = ITEM.item_idx
   		WHERE SALES.sales_status = #{salesStatus}
    	AND SALES.sales_date = #{salesDate}
        ORDER BY SALES.sales_date
	</select> -->
	
	<!-- 판매내역 출력-->
	<select id="selectSalesList" resultType="SaleItemExpert">
		SELECT * FROM(SELECT rownum rn, saleslist.* FROM
				(SELECT S.sales_idx,
                S.sales_date,
                S.sales_status,
                I.item_idx,
                I.item_name,
                I.price,
                I.item_content,
                P.itemfile_name
        FROM sales S
        JOIN item I ON S.item_idx = I.item_idx
        LEFT JOIN photo P ON I.item_idx = P.item_idx
        WHERE I.expert_idx = #{expertIdx} and I.item_status=1
        ORDER BY S.sales_date
        ) saleslist)
        WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>
 
 	<!-- 페이징 처리를 위한 count 검색 쿼리  -->
 	<select id="selectSalesCount" resultType="int">
 		SELECT COUNT(*)
 		FROM sales
 	</select>
 	
 	<!-- 총금액 출력을 위한 쿼리문 -->
 	<select id="selectTotalMoney" resultType="TotalSalesMoney">
 		SELECT S.sales_idx,
                S.sales_date,
                S.sales_status,
                I.item_idx,
                I.item_name,
                I.price,
                I.item_content
        FROM sales S
        JOIN item I ON S.item_idx = I.item_idx
        WHERE I.expert_idx = #{expertIdx} and I.item_status=1
        ORDER BY S.sales_date
    </select>
 	
 	
 	
	<!-- 상태 버튼 클릭시 판매 상태 변경 --> 
	<!-- s
	<update id="updateSalesStatus" parameterType="SaleItemExpert">
		UPDATE sales S
        SET S.sales_status =
		<choose>
			<when test='S.sale_status gt 5 '>
				#{salesStatus}
			</when>   
			<otherwise>
			     
         (  SELECT P.purchase_status
            FROM purchase P
            JOIN item I ON P.item_idx = I.item_idx
            WHERE
                I.item_idx = S.item_idx
                AND P.purchase_status BETWEEN 5 AND 7
                AND ROWNUM = 1
        )
        WHERE EXISTS (
            SELECT 1
            FROM purchase P
            JOIN item I ON P.item_idx = I.item_idx
            WHERE
                I.item_idx = S.item_idx
                AND P.purchase_status BETWEEN 5 AND 7
        )
        </otherwise>
        </choose>
	</update>
 -->
 
	
 </mapper>





